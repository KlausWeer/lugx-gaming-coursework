
name: CI/CD for Game Service

on:
  push:
    branches:
      - main
    paths:
      - 'game_service/**'

jobs:
  # build and push the Docker Image
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get_sha.outputs.sha }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get commit SHA
      id: get_sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./game_service
        push: true
        tags: binalweerasena/game_service:${{ steps.get_sha.outputs.sha }}

  # deploy the new image to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Deploy to Kubernetes
      run: echo "Deploying image binalweerasena/game_service:${{ needs.build-and-push.outputs.image_tag }}..."
      
  # run integration tests after deployment
  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install pytest requests

    - name: Run integration test against live service
      run: echo "Testing http://your-live-service-url/api/games..."
      